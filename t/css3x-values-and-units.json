[ "declaration", { "input" : "font-size: 8vw", "ast" : { "property" : { "ident" : "font-size", "expr" : [ { "vw" : 8 } ] } } } ]
[ "declaration", { "input" : "margin-left: 1.2rem", "ast" : { "property" : { "ident" : "margin-left", "expr" : [ { "rem" : 1.2 } ] } } } ]
[ "declaration", { "input" : "azimuth: .5turn", "ast" : { "property" : { "ident" : "azimuth", "expr" : [ { "turn" : 0.5 } ] } } } ]
[ "resolution", { "input" : "5dppx", "ast" : { "dppx" : 5 } } ]
[ "declaration", { "input" : "width: calc(100%/3 - 2*1em - 2*1px)", "ast" : { "property" : { "ident" : "width", "expr" : [ { "func" : { "ident" : "calc", "expr" : [ { "expr" : [ { "percent" : 100 }, { "op" : "/" }, { "int" : 3 } ] }, { "op" : "-" }, { "expr" : [ { "int" : 2 }, { "op" : "*" }, { "em" : 1 } ] }, { "op" : "-" }, { "expr" : [ { "int" : 2 }, { "op" : "*" }, { "px" : 1 } ] } ] } } ] } } } ]
[ "declaration", { "input" : "azimuth: calc(100%/3 - 2*1em - 2*1px)", "ast" : null, "warnings" : [ "expected an expresssion of type angle, got: length: calc(100%/3 - 2*1em - 2*1px)", "dropping declaration: azimuth" ] } ]
[ "declaration", { "input" : "background-attachment: toggle(scroll, fixed)", "todo" : { "ast" : "RT#117955 - conjunctive '&&' capture" }, "ast" : { "property" : { "ident" : "background-attachment", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "keyw" : "scroll" } ] }, { "expr" : [ { "keyw" : "fixed" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "font-style: toggle(italic, inherit, normal)", "ast" : { "property" : { "ident" : "font-style", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "keyw" : "italic" } ] }, { "expr" : [ { "keyw" : "inherit" } ] }, { "expr" : [ { "keyw" : "normal" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "list-style-type: toggle(disc, circle, square)", "ast" : { "property" : { "ident" : "list-style-type", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "keyw" : "disc" } ] }, { "expr" : [ { "keyw" : "circle" } ] }, { "expr" : [ { "keyw" : "square" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "elevation: toggle(initial, below, above)", "ast" : { "property" : { "ident" : "elevation", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "keyw" : "initial" } ] }, { "expr" : [ { "keyw" : "below" } ] }, { "expr" : [ { "keyw" : "above" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "elevation: toggle(initial, junk, above)", "ast" : null, "warnings" : "usage elevation: <angle> | below | level | above | higher | lower | inherit | initial" } ]
[ "declaration", { "input" : "play-during: toggle( url('music.wav') repeat, auto)", "ast" : { "property" : { "ident" : "play-during", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "url" : "music.wav" }, { "keyw" : "repeat" } ] }, { "expr" : [ { "keyw" : "auto" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "color: toggle(red, rgb(10, 20, 30), transparent)", "ast" : { "property" : { "ident" : "color", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "rgb" : [ { "num" : 255 }, { "num" : 0 }, { "num" : 0 } ] } ] }, { "expr" : [ { "rgb" : [ { "num" : 10 }, { "num" : 20 }, { "num" : 30 } ] } ] }, { "expr" : [ { "color" : "transparent" } ] } ] } } ] } } } ]
// From http://www.w3.org/TR/css3-values/#toggle-notation:
// "Note that because toggled values are separated by commas, they cannot themselves include top-level commas."
[ "declaration", { "input" : "font-family: toggle( 'Gill Sans', Futura, sans-serif )", "ast" : { "property" : { "ident" : "font-family", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "string" : "Gill Sans" } ] }, { "expr" : [ { "ident" : "Futura" } ] }, { "expr" : [ { "keyw" : "sans-serif" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "elevation: attr(auto deg, below)" , "ast" : { "property" : { "ident" : "elevation", "expr" : [ { "func" : { "ident" : "attr", "expr" : [ { "qname" : { "element-name" : "auto" } }, { "keyw" : "deg" }, { "op" : "," }, { "expr:fallback" : [ { "keyw" : "below" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "width: attr(size px, auto)", "ast" : { "property" : { "ident" : "width", "expr" : [ { "func" : { "ident" : "attr", "expr" : [ { "qname" : { "element-name" : "size" } }, { "keyw" : "px" }, { "op" : "," }, { "expr:fallback" : [ { "keyw" : "auto" } ] } ] } } ] } } } ]
[ "declaration", { "input" : "pause: attr(delay time, 30ms 40ms)", "ast" : { "property" : { "ident" : "pause", "expr" : [ { "func" : { "ident" : "attr", "expr" : [ { "qname" : { "element-name" : "delay" } }, { "keyw" : "time" }, { "op" : "," }, { "expr:fallback" : [ { "ms" : 30 }, { "ms" : 40 } ] } ] } } ] } } } ]
[ "declaration", { "input" : "pause: attr(delay WTF, 30ms 40ms)", "ast" : null, "warnings" : "usage pause: [ [<time> | <percentage>]{1,2} ] | inherit | initial" } ]
[ "declaration", { "input" : "pause: attr(delay time, 30ms 40furlongs)", "ast" : null, "warnings" : "usage pause: [ [<time> | <percentage>]{1,2} ] | inherit | initial" } ]
[ "declaration", { "input" : "elevation: calc(.5turn - 30deg)", "ast" : { "property" : { "ident" : "elevation", "expr" : [ { "func" : { "ident" : "calc", "expr" : [ { "expr" : [ { "turn" : 0.5 } ] }, { "op" : "-" }, { "expr" : [ { "deg" : 30 } ] } ] } } ] } } } ]
[ "declaration", { "input" : "pause: calc(2s/3.1 - 100ms)", "ast" : { "property" : { "ident" : "pause", "expr" : [ { "func" : { "ident" : "calc", "expr" : [ { "expr" : [ { "s" : 2 }, { "op" : "/" }, { "num" : 3.1 } ] }, { "op" : "-" }, { "expr" : [ { "ms" : 100 } ] } ] } } ] } } } ]
[ "declaration", { "input" : "margin-top: toggle(10em, calc(100%/3))", "ast" : { "property" : { "ident" : "margin-top", "expr" : [ { "func" : { "ident" : "toggle", "args" : [ { "expr" : [ { "em" : 10 } ] }, { "expr" : [ { "func" : { "ident" : "calc", "expr" : [ { "expr" : [ { "percent" : 100 }, { "op" : "/" }, { "int" : 3 } ] } ] } } ] } ] } } ] } } } ]
